;==============================================================
; Memory Map
;==============================================================
.memorymap
    defaultslot 0
    slotsize    $4000
    slot        0       $0000
    slot        1       $4000
    slot        2       $8000
    slot        3       $C000
.endme

.rombankmap
    bankstotal      5
    banksize        $4000
    banks           5
.endro


;==============================================================
; includes
;==============================================================
.include "bm80.z80"

;==============================================================
; Reset handler
;==============================================================
.BANK   0   slot    0
.ORG    $0000
reset:
    jr  main

.asc "bm80"

;==============================================================
; Interrupts
;==============================================================
.ORG    $0008
    reti

.ORG    $0010
    reti

.ORG    $0018
    reti

.ORG    $0020
    reti

.ORG    $0028
    reti

.ORG    $0030
    reti

.ORG    $0038
mode1_interrupt:
    reti

;==============================================================
; NMI
;==============================================================
.ORG    $0066
nmi:
    retn

;==============================================================
; MAIN - test different opcodes for bm80 emulator
;==============================================================
main:
    di
    ; setup memory banks, 0-2 = pages 0-2 (ROM), 3 = RAM
    ld a, BM80_ROM_PAGE_0
    out (0), a
    inc a
    out (1), a 
    inc a
    out (2), a
    ld a, BM80_RAM_PAGE_0
    out (3), a

    ; test slot 3 pointing to RAM
    ld bc, $C000
    ld (bc), a
    inc bc
    inc b
    dec b
    ld b, $AA
    rlca
    jr main


;==============================================================
; Some far away code, org is relative to slot
;==============================================================
; .BANK   4   slot    1
; .ORG    $0000
;     di
;     nop